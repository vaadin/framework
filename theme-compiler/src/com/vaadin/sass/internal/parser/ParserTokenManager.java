/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package com.vaadin.sass.internal.parser;
import java.io.*;
import java.net.*;
import java.util.ArrayList;
import java.util.Locale;
import java.util.Map;
import org.w3c.css.sac.ConditionFactory;
import org.w3c.css.sac.Condition;
import org.w3c.css.sac.SelectorFactory;
import org.w3c.css.sac.SelectorList;
import org.w3c.css.sac.Selector;
import org.w3c.css.sac.SimpleSelector;
import org.w3c.css.sac.DocumentHandler;
import org.w3c.css.sac.InputSource;
import org.w3c.css.sac.ErrorHandler;
import org.w3c.css.sac.CSSException;
import org.w3c.css.sac.CSSParseException;
import org.w3c.css.sac.Locator;
import org.w3c.css.sac.LexicalUnit;
import org.w3c.flute.parser.selectors.SelectorFactoryImpl;
import org.w3c.flute.parser.selectors.ConditionFactoryImpl;
import org.w3c.flute.util.Encoding;
import com.vaadin.sass.internal.handler.*;
import com.vaadin.sass.internal.tree.*;

/** Token Manager. */
public class ParserTokenManager implements ParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0xffe0000000000000L) != 0L || (active1 & 0x7c0000007L) != 0L)
            return 111;
         if ((active0 & 0x10000L) != 0L)
            return 79;
         if ((active0 & 0x100000000L) != 0L)
            return 441;
         if ((active0 & 0x4000000000L) != 0L)
            return 442;
         if ((active0 & 0x1c000000000000L) != 0L || (active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 71;
            return 443;
         }
         if ((active0 & 0x8000044L) != 0L)
            return 3;
         if ((active0 & 0x200800L) != 0L)
            return 42;
         return -1;
      case 1:
         if ((active0 & 0xffe0000000000000L) != 0L || (active1 & 0x7c0000005L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 1;
            return 444;
         }
         if ((active0 & 0x8000000000000L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 1;
            return 443;
         }
         if ((active1 & 0x2L) != 0L)
            return 112;
         if ((active0 & 0x14000000000000L) != 0L || (active1 & 0x10L) != 0L)
            return 443;
         if ((active0 & 0x40L) != 0L)
            return 1;
         return -1;
      case 2:
         if ((active0 & 0x4000000000000000L) != 0L)
            return 444;
         if ((active0 & 0x8000000000000L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 2;
            return 443;
         }
         if ((active0 & 0xbfe0000000000000L) != 0L || (active1 & 0x7c0000007L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 444;
         }
         return -1;
      case 3:
         if ((active0 & 0x8000000000000L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 3;
            return 443;
         }
         if ((active0 & 0x800000000000000L) != 0L)
            return 444;
         if ((active0 & 0xb7e0000000000000L) != 0L || (active1 & 0x7c0000007L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 3;
            return 444;
         }
         return -1;
      case 4:
         if ((active0 & 0x9400000000000000L) != 0L || (active1 & 0x200000000L) != 0L)
            return 444;
         if ((active0 & 0x23e0000000000000L) != 0L || (active1 & 0x5c0000007L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 4;
            return 444;
         }
         if ((active0 & 0x8000000000000L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 4;
            return 443;
         }
         return -1;
      case 5:
         if ((active0 & 0x8000000000000L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 5;
            return 443;
         }
         if ((active0 & 0x1c0000000000000L) != 0L || (active1 & 0x540000007L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 444;
         }
         if ((active0 & 0x2220000000000000L) != 0L || (active1 & 0x80000000L) != 0L)
            return 444;
         return -1;
      case 6:
         if ((active0 & 0xc0000000000000L) != 0L || (active1 & 0x500000006L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 6;
            return 444;
         }
         if ((active0 & 0x8000000000000L) != 0L)
            return 443;
         if ((active0 & 0x100000000000000L) != 0L || (active1 & 0x40000001L) != 0L)
            return 444;
         return -1;
      case 7:
         if ((active0 & 0x80000000000000L) != 0L || (active1 & 0x400000006L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 7;
            return 444;
         }
         if ((active0 & 0x40000000000000L) != 0L || (active1 & 0x100000000L) != 0L)
            return 444;
         return -1;
      case 8:
         if ((active0 & 0x80000000000000L) != 0L || (active1 & 0x4L) != 0L)
            return 444;
         if ((active1 & 0x400000002L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 8;
            return 444;
         }
         return -1;
      case 9:
         if ((active1 & 0x400000000L) != 0L)
            return 444;
         if ((active1 & 0x2L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 9;
            return 444;
         }
         return -1;
      case 10:
         if ((active1 & 0x2L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 10;
            return 444;
         }
         return -1;
      case 11:
         if ((active1 & 0x2L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 11;
            return 444;
         }
         return -1;
      case 12:
         if ((active1 & 0x2L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 12;
            return 444;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa1_0(0x4000000000L, 0x0L);
      case 36:
         return jjMoveStringLiteralDfa1_0(0x10000L, 0x0L);
      case 38:
         jjmatchedKind = 31;
         return jjMoveStringLiteralDfa1_0(0x2000000000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 33);
      case 41:
         return jjStopAtPos(0, 34);
      case 42:
         jjmatchedKind = 30;
         return jjMoveStringLiteralDfa1_0(0x20000L, 0x0L);
      case 43:
         return jjStopAtPos(0, 20);
      case 44:
         return jjStopAtPos(0, 22);
      case 45:
         jjmatchedKind = 21;
         return jjMoveStringLiteralDfa1_0(0x800L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 32, 441);
      case 47:
         jjmatchedKind = 27;
         return jjMoveStringLiteralDfa1_0(0x44L, 0x0L);
      case 58:
         return jjStopAtPos(0, 39);
      case 59:
         return jjStopAtPos(0, 23);
      case 60:
         jjmatchedKind = 26;
         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);
      case 61:
         jjmatchedKind = 19;
         return jjMoveStringLiteralDfa1_0(0x800000000L, 0x0L);
      case 62:
         return jjStopAtPos(0, 24);
      case 64:
         return jjMoveStringLiteralDfa1_0(0xffe0000000000000L, 0x7c0000007L);
      case 91:
         return jjStopAtPos(0, 28);
      case 93:
         return jjStopAtPos(0, 29);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x8000L, 0x0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(0x10000000000000L, 0x10L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_0(0xc000000000000L, 0x0L);
      case 123:
         return jjStopAtPos(0, 12);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x1000004000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 13);
      case 126:
         jjmatchedKind = 25;
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L);
      default :
         return jjMoveNfa_0(4, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400L, active1, 0L);
      case 38:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStopAtPos(1, 37);
         break;
      case 42:
         if ((active0 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(1, 6, 1);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x800L, active1, 0x2L);
      case 47:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(1, 2);
         break;
      case 61:
         if ((active0 & 0x4000L) != 0L)
            return jjStopAtPos(1, 14);
         else if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(1, 15);
         else if ((active0 & 0x10000L) != 0L)
            return jjStopAtPos(1, 16);
         else if ((active0 & 0x20000L) != 0L)
            return jjStopAtPos(1, 17);
         else if ((active0 & 0x40000L) != 0L)
            return jjStopAtPos(1, 18);
         else if ((active0 & 0x800000000L) != 0L)
            return jjStopAtPos(1, 35);
         else if ((active0 & 0x4000000000L) != 0L)
            return jjStopAtPos(1, 38);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100000000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x9000000000000000L, active1, 0x1L);
      case 70:
      case 102:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(1, 68, 443);
         return jjMoveStringLiteralDfa2_0(active0, 0x880000000000000L, active1, 0x400000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x4040000000000000L, active1, 0x40000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000000000000L, active1, 0x80000000L);
      case 78:
      case 110:
         if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 52, 443);
         break;
      case 79:
      case 111:
         if ((active0 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 50, 443);
         break;
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa2_0(active0, 0x2400000000000000L, active1, 0L);
      case 124:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStopAtPos(1, 36);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400L, active1, 0L);
      case 62:
         if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(2, 11);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x1400000000000000L, active1, 0x200000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x300000000000000L, active1, 0x80000000L);
      case 70:
      case 102:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 62, 444);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000000000000L, active1, 0x100000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x20000000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x40000002L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000000L, active1, 0x400000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000000L, active1, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000000000L, active1, 0x4L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(3, 10);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L, active1, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x1040000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80000000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200000000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x80000000000000L, active1, 0x400000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000000L, active1, 0x2L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40000004L);
      case 82:
      case 114:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 59, 444);
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000000000L, active1, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000000000000L, active1, 0x1L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000000000L, active1, 0L);
      case 69:
      case 101:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 63, 444);
         else if ((active1 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(4, 97, 444);
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x1L);
      case 72:
      case 104:
         if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 60, 444);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x20000000000000L, active1, 0x80000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa5_0(active0, 0x2040000000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 58, 444);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x40000000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x4L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x100000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x400000000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x308000000000000L, active1, 0L);
      case 90:
      case 122:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x400000002L);
      case 65:
      case 97:
         if ((active1 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(5, 95, 444);
         break;
      case 69:
      case 101:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 61, 444);
         break;
      case 71:
      case 103:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 57, 444);
         return jjMoveStringLiteralDfa6_0(active0, 0x8000000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 53, 444);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x1L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x4L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000000000000L, active1, 0x40000000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x100000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa6_0(active0, 0x80000000000000L, active1, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x40000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(6, 64, 444);
         return jjMoveStringLiteralDfa7_0(active0, 0x40000000000000L, active1, 0x2L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x100000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x400000000L);
      case 72:
      case 104:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 51, 443);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 56, 444);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x4L);
      case 84:
      case 116:
         if ((active1 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(6, 94, 444);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x400000000L);
      case 69:
      case 101:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 54, 444);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_0(active0, 0x80000000000000L, active1, 0x2L);
      case 84:
      case 116:
         if ((active1 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(7, 96, 444);
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x4L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x400000002L);
      case 78:
      case 110:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 55, 444);
         break;
      case 83:
      case 115:
         if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(8, 66, 444);
         break;
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, 0L, active1);
      return 9;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(9, 98, 444);
         break;
      case 85:
      case 117:
         return jjMoveStringLiteralDfa10_0(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(8, 0L, active1);
}
private int jjMoveStringLiteralDfa10_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(8, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, 0L, active1);
      return 10;
   }
   switch(curChar)
   {
      case 77:
      case 109:
         return jjMoveStringLiteralDfa11_0(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(9, 0L, active1);
}
private int jjMoveStringLiteralDfa11_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(9, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, 0L, active1);
      return 11;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa12_0(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(10, 0L, active1);
}
private int jjMoveStringLiteralDfa12_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(10, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, 0L, active1);
      return 12;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         return jjMoveStringLiteralDfa13_0(active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(11, 0L, active1);
}
private int jjMoveStringLiteralDfa13_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(11, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, 0L, active1);
      return 13;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(13, 65, 444);
         break;
      default :
         break;
   }
   return jjStartNfa_0(12, 0L, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 441;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 441:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 4);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(252, 255);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(249, 251);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(247, 248);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(244, 246);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(239, 243);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(235, 238);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(231, 234);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(228, 230);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 227);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(222, 224);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(219, 221);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(216, 218);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(213, 215);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(210, 212);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(207, 209);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(205, 206);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 72)
                        kind = 72;
                     jjCheckNAdd(204);
                  }
                  break;
               case 79:
                  if (curChar == 45)
                     jjCheckNAdd(80);
                  break;
               case 442:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(189, 198);
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(181, 188);
                  break;
               case 444:
               case 113:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 443:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(5, 8);
                  else if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(169, 170);
                  else if (curChar == 40)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 71)
                        kind = 71;
                     jjCheckNAddTwoStates(158, 159);
                  }
                  break;
               case 111:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 72)
                        kind = 72;
                     jjCheckNAddStates(9, 82);
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(83, 100);
                  else if (curChar == 45)
                     jjAddStates(101, 102);
                  else if (curChar == 33)
                     jjCheckNAddStates(103, 106);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(100, 101);
                  else if (curChar == 36)
                     jjCheckNAddStates(107, 110);
                  else if (curChar == 39)
                     jjCheckNAddStates(111, 114);
                  else if (curChar == 34)
                     jjCheckNAddStates(115, 118);
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 3;
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 42;
                  else if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 0:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(0);
                  break;
               case 1:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
                  if ((0xffff7fffffffffffL & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 3:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 6:
                  if (curChar == 36)
                     jjCheckNAddStates(119, 122);
                  break;
               case 7:
                  if (curChar == 45)
                     jjCheckNAdd(8);
                  break;
               case 9:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(123, 125);
                  break;
               case 12:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(123, 125);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(126, 130);
                  break;
               case 14:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(123, 125);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(131, 138);
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(139, 142);
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(143, 147);
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(148, 153);
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(154, 160);
                  break;
               case 22:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(161, 165);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(166, 173);
                  break;
               case 24:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(174, 177);
                  break;
               case 25:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(178, 182);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(183, 188);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(189, 195);
                  break;
               case 28:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 40:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 43:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 34)
                     jjCheckNAddStates(115, 118);
                  break;
               case 45:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(115, 118);
                  break;
               case 46:
                  if (curChar == 34 && kind > 70)
                     kind = 70;
                  break;
               case 48:
                  if (curChar == 12)
                     jjCheckNAddStates(115, 118);
                  break;
               case 50:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(115, 118);
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(196, 201);
                  break;
               case 52:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(115, 118);
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(202, 210);
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(211, 215);
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(216, 221);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(222, 228);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(229, 236);
                  break;
               case 58:
                  if (curChar == 13)
                     jjCheckNAddStates(115, 118);
                  break;
               case 59:
                  if (curChar == 10)
                     jjCheckNAddStates(115, 118);
                  break;
               case 60:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 39)
                     jjCheckNAddStates(111, 114);
                  break;
               case 62:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(111, 114);
                  break;
               case 63:
                  if (curChar == 39 && kind > 70)
                     kind = 70;
                  break;
               case 65:
                  if (curChar == 12)
                     jjCheckNAddStates(111, 114);
                  break;
               case 67:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(111, 114);
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(237, 242);
                  break;
               case 69:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(111, 114);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(243, 251);
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(252, 256);
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(257, 262);
                  break;
               case 73:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(263, 269);
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(270, 277);
                  break;
               case 75:
                  if (curChar == 13)
                     jjCheckNAddStates(111, 114);
                  break;
               case 76:
                  if (curChar == 10)
                     jjCheckNAddStates(111, 114);
                  break;
               case 77:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 36)
                     jjCheckNAddStates(107, 110);
                  break;
               case 81:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 83:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 84:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(278, 281);
                  break;
               case 85:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(282, 288);
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(289, 291);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(292, 295);
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(296, 300);
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(301, 306);
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(307, 310);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(311, 317);
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(318, 320);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(321, 324);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(325, 329);
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(330, 335);
                  break;
               case 99:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(100, 101);
                  break;
               case 100:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 102:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 103:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddStates(336, 339);
                  break;
               case 104:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddStates(340, 346);
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddStates(347, 349);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddStates(350, 353);
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddStates(354, 358);
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddStates(359, 364);
                  break;
               case 115:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(365, 368);
                  break;
               case 117:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(369, 375);
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(376, 378);
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(379, 382);
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(383, 387);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(388, 393);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(394, 397);
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(398, 404);
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(405, 407);
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(408, 411);
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(412, 416);
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(417, 422);
                  break;
               case 132:
                  if ((0x100003600L & l) != 0L)
                     jjAddStates(423, 424);
                  break;
               case 133:
                  if (curChar == 40 && kind > 111)
                     kind = 111;
                  break;
               case 140:
                  if ((0x100003600L & l) != 0L)
                     jjAddStates(425, 426);
                  break;
               case 141:
                  if (curChar == 40 && kind > 112)
                     kind = 112;
                  break;
               case 148:
                  if ((0x100003600L & l) != 0L)
                     jjAddStates(427, 428);
                  break;
               case 149:
                  if (curChar == 40 && kind > 113)
                     kind = 113;
                  break;
               case 158:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(158, 159);
                  break;
               case 160:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(158, 159);
                  break;
               case 161:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(429, 432);
                  break;
               case 162:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(158, 159);
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(433, 439);
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(440, 442);
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(443, 446);
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(447, 451);
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(452, 457);
                  break;
               case 168:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(5, 8);
                  break;
               case 169:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(169, 170);
                  break;
               case 170:
                  if (curChar == 40 && kind > 114)
                     kind = 114;
                  break;
               case 172:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(5, 8);
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(458, 462);
                  break;
               case 174:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(5, 8);
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(463, 470);
                  break;
               case 176:
               case 382:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(471, 474);
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(475, 479);
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(480, 485);
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(486, 492);
                  break;
               case 180:
                  if (curChar == 33)
                     jjCheckNAddStates(103, 106);
                  break;
               case 181:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(181, 188);
                  break;
               case 189:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(189, 198);
                  break;
               case 199:
                  if (curChar == 45)
                     jjAddStates(101, 102);
                  break;
               case 203:
                  if (curChar == 46)
                     jjCheckNAddStates(83, 100);
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjCheckNAdd(204);
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(205, 206);
                  break;
               case 206:
                  if (curChar == 37 && kind > 76)
                     kind = 76;
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(207, 209);
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(210, 212);
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(213, 215);
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(216, 218);
                  break;
               case 219:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(219, 221);
                  break;
               case 222:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(222, 224);
                  break;
               case 225:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(225, 227);
                  break;
               case 228:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(228, 230);
                  break;
               case 231:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(231, 234);
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(235, 238);
                  break;
               case 239:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(239, 243);
                  break;
               case 244:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(244, 246);
                  break;
               case 247:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(247, 248);
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(249, 251);
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(252, 255);
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 4);
                  break;
               case 257:
                  if (curChar == 45)
                     jjCheckNAdd(258);
                  break;
               case 259:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(259, 260);
                  break;
               case 261:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(259, 260);
                  break;
               case 262:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(493, 496);
                  break;
               case 263:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(259, 260);
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(497, 503);
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(504, 506);
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(507, 510);
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(511, 515);
                  break;
               case 268:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(516, 521);
                  break;
               case 271:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(522, 525);
                  break;
               case 272:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(526, 532);
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(533, 535);
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(536, 539);
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(540, 544);
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(545, 550);
                  break;
               case 278:
                  if (curChar == 40)
                     jjCheckNAddStates(551, 556);
                  break;
               case 279:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     jjCheckNAddStates(557, 560);
                  break;
               case 280:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(280, 281);
                  break;
               case 281:
                  if (curChar == 41 && kind > 74)
                     kind = 74;
                  break;
               case 283:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(557, 560);
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(561, 565);
                  break;
               case 285:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(557, 560);
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(566, 573);
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(574, 577);
                  break;
               case 288:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(578, 582);
                  break;
               case 289:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(583, 588);
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(589, 595);
                  break;
               case 291:
                  if (curChar == 39)
                     jjCheckNAddStates(596, 599);
                  break;
               case 292:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(596, 599);
                  break;
               case 293:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(280, 281);
                  break;
               case 295:
                  if (curChar == 12)
                     jjCheckNAddStates(596, 599);
                  break;
               case 297:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(596, 599);
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(600, 605);
                  break;
               case 299:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(596, 599);
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(606, 614);
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(615, 619);
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(620, 625);
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(626, 632);
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(633, 640);
                  break;
               case 305:
                  if (curChar == 13)
                     jjCheckNAddStates(596, 599);
                  break;
               case 306:
                  if (curChar == 10)
                     jjCheckNAddStates(596, 599);
                  break;
               case 307:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 308:
                  if (curChar == 34)
                     jjCheckNAddStates(641, 644);
                  break;
               case 309:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(641, 644);
                  break;
               case 310:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(280, 281);
                  break;
               case 312:
                  if (curChar == 12)
                     jjCheckNAddStates(641, 644);
                  break;
               case 314:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(641, 644);
                  break;
               case 315:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(645, 650);
                  break;
               case 316:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(641, 644);
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(651, 659);
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(660, 664);
                  break;
               case 319:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(665, 670);
                  break;
               case 320:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(671, 677);
                  break;
               case 321:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(678, 685);
                  break;
               case 322:
                  if (curChar == 13)
                     jjCheckNAddStates(641, 644);
                  break;
               case 323:
                  if (curChar == 10)
                     jjCheckNAddStates(641, 644);
                  break;
               case 324:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(686, 692);
                  break;
               case 328:
                  if (curChar == 43)
                     jjAddStates(693, 694);
                  break;
               case 329:
                  if (curChar != 63)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 330:
                  if (curChar != 63)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddStates(695, 698);
                  break;
               case 331:
                  if (curChar == 63 && kind > 110)
                     kind = 110;
                  break;
               case 332:
               case 347:
               case 351:
               case 354:
               case 357:
                  if (curChar != 63)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAdd(331);
                  break;
               case 333:
                  if (curChar != 63)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddTwoStates(331, 332);
                  break;
               case 334:
                  if (curChar != 63)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddStates(699, 701);
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjAddStates(702, 707);
                  break;
               case 336:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 337:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(339);
                  break;
               case 339:
                  if ((0x3ff000000000000L & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 342:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 343:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAdd(331);
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 348:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 350:
                  if (curChar != 63)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddTwoStates(331, 351);
                  break;
               case 352:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 353:
                  if (curChar != 63)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddStates(708, 710);
                  break;
               case 355:
                  if (curChar != 63)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddTwoStates(331, 354);
                  break;
               case 356:
                  if (curChar != 63)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddStates(711, 714);
                  break;
               case 358:
                  if (curChar != 63)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddTwoStates(331, 357);
                  break;
               case 359:
                  if (curChar != 63)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddStates(715, 717);
                  break;
               case 360:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 361:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(362, 368);
                  break;
               case 362:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 363:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddStates(718, 721);
                  break;
               case 365:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAdd(339);
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddTwoStates(339, 365);
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddStates(722, 724);
                  break;
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(725, 729);
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(362);
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(369, 362);
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(730, 732);
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(733, 736);
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(737, 740);
                  break;
               case 375:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(741, 747);
                  break;
               case 376:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(748, 750);
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(751, 754);
                  break;
               case 378:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(755, 759);
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(760, 765);
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(766, 770);
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(771, 778);
                  break;
               case 383:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(779, 783);
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(784, 789);
                  break;
               case 385:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(790, 796);
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjCheckNAddStates(9, 82);
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjCheckNAdd(387);
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(388, 389);
                  break;
               case 389:
                  if (curChar == 46)
                     jjCheckNAdd(204);
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(390, 206);
                  break;
               case 391:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(391, 392);
                  break;
               case 392:
                  if (curChar == 46)
                     jjCheckNAdd(205);
                  break;
               case 393:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(393, 209);
                  break;
               case 394:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(394, 395);
                  break;
               case 395:
                  if (curChar == 46)
                     jjCheckNAdd(207);
                  break;
               case 396:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(396, 212);
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(397, 398);
                  break;
               case 398:
                  if (curChar == 46)
                     jjCheckNAdd(210);
                  break;
               case 399:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(399, 215);
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(400, 401);
                  break;
               case 401:
                  if (curChar == 46)
                     jjCheckNAdd(213);
                  break;
               case 402:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(402, 218);
                  break;
               case 403:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(403, 404);
                  break;
               case 404:
                  if (curChar == 46)
                     jjCheckNAdd(216);
                  break;
               case 405:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(405, 221);
                  break;
               case 406:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(406, 407);
                  break;
               case 407:
                  if (curChar == 46)
                     jjCheckNAdd(219);
                  break;
               case 408:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(408, 224);
                  break;
               case 409:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(409, 410);
                  break;
               case 410:
                  if (curChar == 46)
                     jjCheckNAdd(222);
                  break;
               case 411:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(411, 227);
                  break;
               case 412:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(412, 413);
                  break;
               case 413:
                  if (curChar == 46)
                     jjCheckNAdd(225);
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(414, 230);
                  break;
               case 415:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(415, 416);
                  break;
               case 416:
                  if (curChar == 46)
                     jjCheckNAdd(228);
                  break;
               case 417:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(417, 234);
                  break;
               case 418:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(418, 419);
                  break;
               case 419:
                  if (curChar == 46)
                     jjCheckNAdd(231);
                  break;
               case 420:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(420, 238);
                  break;
               case 421:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(421, 422);
                  break;
               case 422:
                  if (curChar == 46)
                     jjCheckNAdd(235);
                  break;
               case 423:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(423, 243);
                  break;
               case 424:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(424, 425);
                  break;
               case 425:
                  if (curChar == 46)
                     jjCheckNAdd(239);
                  break;
               case 426:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(426, 246);
                  break;
               case 427:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(427, 428);
                  break;
               case 428:
                  if (curChar == 46)
                     jjCheckNAdd(244);
                  break;
               case 429:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(429, 248);
                  break;
               case 430:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(430, 431);
                  break;
               case 431:
                  if (curChar == 46)
                     jjCheckNAdd(247);
                  break;
               case 432:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(432, 251);
                  break;
               case 433:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(433, 434);
                  break;
               case 434:
                  if (curChar == 46)
                     jjCheckNAdd(249);
                  break;
               case 435:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(435, 255);
                  break;
               case 436:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(436, 437);
                  break;
               case 437:
                  if (curChar == 46)
                     jjCheckNAdd(252);
                  break;
               case 438:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(797, 801);
                  break;
               case 439:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(439, 440);
                  break;
               case 440:
                  if (curChar == 46)
                     jjCheckNAdd(256);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 42:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(5, 8);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 71)
                        kind = 71;
                     jjCheckNAddTwoStates(158, 159);
                  }
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 79:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 75)
                        kind = 75;
                     jjCheckNAddTwoStates(81, 82);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(83, 93);
                  break;
               case 442:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 444:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAddTwoStates(113, 114);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(115, 116);
                  break;
               case 443:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(5, 8);
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(160, 161);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 71)
                        kind = 71;
                     jjCheckNAddTwoStates(158, 159);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(172, 173);
                  break;
               case 111:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAddTwoStates(113, 114);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(115, 125);
                  break;
               case 4:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 71)
                        kind = 71;
                     jjCheckNAddStates(802, 807);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(808, 811);
                  else if (curChar == 64)
                     jjAddStates(812, 815);
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(816, 818);
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 2:
                  if (kind > 5)
                     kind = 5;
                  break;
               case 5:
                  if (curChar == 123)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(123, 125);
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(123, 125);
                  break;
               case 10:
                  if (curChar == 125 && kind > 40)
                     kind = 40;
                  break;
               case 11:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(12, 13);
                  break;
               case 12:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(123, 125);
                  break;
               case 13:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(126, 130);
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(131, 138);
                  break;
               case 16:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(139, 142);
                  break;
               case 17:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(143, 147);
                  break;
               case 18:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(148, 153);
                  break;
               case 19:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(154, 160);
                  break;
               case 21:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(12, 22);
                  break;
               case 22:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(161, 165);
                  break;
               case 23:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(166, 173);
                  break;
               case 24:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(174, 177);
                  break;
               case 25:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(178, 182);
                  break;
               case 26:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(183, 188);
                  break;
               case 27:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(189, 195);
                  break;
               case 29:
                  if ((0x4000000040000L & l) != 0L && kind > 67)
                     kind = 67;
                  break;
               case 30:
               case 35:
                  if ((0x2000000020L & l) != 0L)
                     jjCheckNAdd(29);
                  break;
               case 31:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 36:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 41:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 45:
               case 50:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(115, 118);
                  break;
               case 47:
                  if (curChar == 92)
                     jjAddStates(819, 822);
                  break;
               case 49:
                  if (curChar == 92)
                     jjAddStates(823, 824);
                  break;
               case 51:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(196, 201);
                  break;
               case 53:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(202, 210);
                  break;
               case 54:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(211, 215);
                  break;
               case 55:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(216, 221);
                  break;
               case 56:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(222, 228);
                  break;
               case 57:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(229, 236);
                  break;
               case 62:
               case 67:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(111, 114);
                  break;
               case 64:
                  if (curChar == 92)
                     jjAddStates(825, 828);
                  break;
               case 66:
                  if (curChar == 92)
                     jjAddStates(829, 830);
                  break;
               case 68:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(237, 242);
                  break;
               case 70:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(243, 251);
                  break;
               case 71:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(252, 256);
                  break;
               case 72:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(257, 262);
                  break;
               case 73:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(263, 269);
                  break;
               case 74:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(270, 277);
                  break;
               case 80:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 81:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 82:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(83, 84);
                  break;
               case 83:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 84:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(278, 281);
                  break;
               case 86:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(282, 288);
                  break;
               case 87:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(289, 291);
                  break;
               case 88:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(292, 295);
                  break;
               case 89:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(296, 300);
                  break;
               case 90:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(301, 306);
                  break;
               case 92:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(83, 93);
                  break;
               case 93:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(307, 310);
                  break;
               case 94:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(311, 317);
                  break;
               case 95:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(318, 320);
                  break;
               case 96:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(321, 324);
                  break;
               case 97:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(325, 329);
                  break;
               case 98:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(330, 335);
                  break;
               case 100:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 101:
                  if (curChar == 92)
                     jjAddStates(831, 832);
                  break;
               case 102:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 103:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddStates(336, 339);
                  break;
               case 105:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddStates(340, 346);
                  break;
               case 106:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddStates(347, 349);
                  break;
               case 107:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddStates(350, 353);
                  break;
               case 108:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddStates(354, 358);
                  break;
               case 109:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddStates(359, 364);
                  break;
               case 110:
                  if (curChar == 64)
                     jjAddStates(812, 815);
                  break;
               case 112:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 113:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 114:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(115, 116);
                  break;
               case 115:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 116:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(365, 368);
                  break;
               case 118:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(369, 375);
                  break;
               case 119:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(376, 378);
                  break;
               case 120:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(379, 382);
                  break;
               case 121:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(383, 387);
                  break;
               case 122:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(388, 393);
                  break;
               case 124:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(115, 125);
                  break;
               case 125:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(394, 397);
                  break;
               case 126:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(398, 404);
                  break;
               case 127:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(405, 407);
                  break;
               case 128:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(408, 411);
                  break;
               case 129:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(412, 416);
                  break;
               case 130:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddStates(417, 422);
                  break;
               case 131:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(423, 424);
                  break;
               case 134:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 135:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if ((0x1000000010L & l) != 0L)
                     jjAddStates(425, 426);
                  break;
               case 142:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 143:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if ((0x8000000080000L & l) != 0L)
                     jjAddStates(427, 428);
                  break;
               case 150:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 151:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 158:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(158, 159);
                  break;
               case 159:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(160, 161);
                  break;
               case 160:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(158, 159);
                  break;
               case 161:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(429, 432);
                  break;
               case 163:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(433, 439);
                  break;
               case 164:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(440, 442);
                  break;
               case 165:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(443, 446);
                  break;
               case 166:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(447, 451);
                  break;
               case 167:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(452, 457);
                  break;
               case 168:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(5, 8);
                  break;
               case 171:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(172, 173);
                  break;
               case 172:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(5, 8);
                  break;
               case 173:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(458, 462);
                  break;
               case 175:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(463, 470);
                  break;
               case 176:
               case 382:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(471, 474);
                  break;
               case 177:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(475, 479);
                  break;
               case 178:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(480, 485);
                  break;
               case 179:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(486, 492);
                  break;
               case 182:
                  if ((0x10000000100000L & l) != 0L && kind > 69)
                     kind = 69;
                  break;
               case 183:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 190:
                  if ((0x10000000100000L & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 191:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 200:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(158, 159);
                  break;
               case 201:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(5, 8);
                  break;
               case 202:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(802, 807);
                  break;
               case 208:
                  if ((0x10000000100000L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 209:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 211:
                  if ((0x200000002000L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 212:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 214:
                  if ((0x200000002000L & l) != 0L && kind > 79)
                     kind = 79;
                  break;
               case 215:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 217:
                  if ((0x800000008L & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 218:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 220:
                  if ((0x400000004000L & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 221:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 223:
                  if ((0x100000001000000L & l) != 0L && kind > 82)
                     kind = 82;
                  break;
               case 224:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 226:
                  if ((0x200000002000L & l) != 0L && kind > 83)
                     kind = 83;
                  break;
               case 227:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 229:
                  if ((0x100000001000000L & l) != 0L && kind > 84)
                     kind = 84;
                  break;
               case 230:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 232:
                  if ((0x8000000080L & l) != 0L && kind > 85)
                     kind = 85;
                  break;
               case 233:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 236:
                  if ((0x1000000010L & l) != 0L && kind > 86)
                     kind = 86;
                  break;
               case 237:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 240:
                  if ((0x1000000010L & l) != 0L && kind > 87)
                     kind = 87;
                  break;
               case 241:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 245:
                  if ((0x8000000080000L & l) != 0L && kind > 88)
                     kind = 88;
                  break;
               case 246:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 248:
                  if ((0x8000000080000L & l) != 0L && kind > 89)
                     kind = 89;
                  break;
               case 250:
                  if ((0x400000004000000L & l) != 0L && kind > 90)
                     kind = 90;
                  break;
               case 251:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 253:
                  if ((0x400000004000000L & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 254:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 258:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(259, 260);
                  break;
               case 259:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(259, 260);
                  break;
               case 260:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(261, 262);
                  break;
               case 261:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(259, 260);
                  break;
               case 262:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(493, 496);
                  break;
               case 264:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(497, 503);
                  break;
               case 265:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(504, 506);
                  break;
               case 266:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(507, 510);
                  break;
               case 267:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(511, 515);
                  break;
               case 268:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(516, 521);
                  break;
               case 270:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(261, 271);
                  break;
               case 271:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(522, 525);
                  break;
               case 272:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(526, 532);
                  break;
               case 273:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(533, 535);
                  break;
               case 274:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(536, 539);
                  break;
               case 275:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(540, 544);
                  break;
               case 276:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(545, 550);
                  break;
               case 277:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(816, 818);
                  break;
               case 279:
               case 283:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(557, 560);
                  break;
               case 282:
                  if (curChar == 92)
                     jjAddStates(833, 834);
                  break;
               case 284:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(561, 565);
                  break;
               case 286:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(566, 573);
                  break;
               case 287:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(574, 577);
                  break;
               case 288:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(578, 582);
                  break;
               case 289:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(583, 588);
                  break;
               case 290:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(589, 595);
                  break;
               case 292:
               case 297:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(596, 599);
                  break;
               case 294:
                  if (curChar == 92)
                     jjAddStates(835, 838);
                  break;
               case 296:
                  if (curChar == 92)
                     jjAddStates(839, 840);
                  break;
               case 298:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(600, 605);
                  break;
               case 300:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(606, 614);
                  break;
               case 301:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(615, 619);
                  break;
               case 302:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(620, 625);
                  break;
               case 303:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(626, 632);
                  break;
               case 304:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(633, 640);
                  break;
               case 309:
               case 314:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(641, 644);
                  break;
               case 311:
                  if (curChar == 92)
                     jjAddStates(841, 844);
                  break;
               case 313:
                  if (curChar == 92)
                     jjAddStates(845, 846);
                  break;
               case 315:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(645, 650);
                  break;
               case 317:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(651, 659);
                  break;
               case 318:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(660, 664);
                  break;
               case 319:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(665, 670);
                  break;
               case 320:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(671, 677);
                  break;
               case 321:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(678, 685);
                  break;
               case 326:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 327:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 335:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjAddStates(702, 707);
                  break;
               case 336:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 337:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 338:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(339);
                  break;
               case 339:
                  if ((0x7e0000007eL & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 340:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 341:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 342:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 343:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 344:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 345:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 346:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 348:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 349:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 352:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 361:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(362, 368);
                  break;
               case 363:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 364:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddStates(718, 721);
                  break;
               case 365:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAdd(339);
                  break;
               case 366:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddTwoStates(339, 365);
                  break;
               case 367:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddStates(722, 724);
                  break;
               case 368:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(725, 729);
                  break;
               case 369:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(362);
                  break;
               case 370:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(369, 362);
                  break;
               case 371:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(730, 732);
                  break;
               case 372:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(733, 736);
                  break;
               case 373:
                  if (curChar == 92)
                     jjCheckNAddStates(808, 811);
                  break;
               case 374:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(737, 740);
                  break;
               case 375:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(741, 747);
                  break;
               case 376:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(748, 750);
                  break;
               case 377:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(751, 754);
                  break;
               case 378:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(755, 759);
                  break;
               case 379:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(760, 765);
                  break;
               case 380:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(766, 770);
                  break;
               case 381:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(771, 778);
                  break;
               case 383:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(779, 783);
                  break;
               case 384:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(784, 789);
                  break;
               case 385:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(790, 796);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 79:
               case 81:
               case 83:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(81, 82);
                  break;
               case 444:
               case 113:
               case 115:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 443:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 71)
                        kind = 71;
                     jjCheckNAddTwoStates(158, 159);
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(5, 8);
                  break;
               case 111:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAddTwoStates(113, 114);
                  break;
               case 4:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(802, 807);
                  break;
               case 2:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 9:
               case 12:
               case 20:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(123, 125);
                  break;
               case 45:
               case 50:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(115, 118);
                  break;
               case 62:
               case 67:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(111, 114);
                  break;
               case 100:
               case 102:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 93)
                     kind = 93;
                  jjCheckNAddTwoStates(100, 101);
                  break;
               case 158:
               case 160:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(158, 159);
                  break;
               case 168:
               case 172:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(5, 8);
                  break;
               case 259:
               case 261:
               case 269:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(259, 260);
                  break;
               case 279:
               case 283:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(557, 560);
                  break;
               case 292:
               case 297:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(596, 599);
                  break;
               case 309:
               case 314:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(641, 644);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 441 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_3()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_3(0x100L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_3(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(1, 8);
         break;
      default :
         return 2;
   }
   return 2;
}
private int jjMoveStringLiteralDfa0_1()
{
   return jjMoveNfa_1(0, 0);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffffffffdbffL & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 1:
                  if ((0x2400L & l) != 0L && kind > 4)
                     kind = 4;
                  break;
               case 2:
                  if (curChar == 10 && kind > 4)
                     kind = 4;
                  break;
               case 3:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 3)
                     kind = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_2(0x80L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_2(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(1, 7);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   256, 257, 258, 269, 270, 168, 169, 170, 171, 387, 388, 389, 390, 391, 392, 206, 
   393, 394, 395, 209, 396, 397, 398, 212, 399, 400, 401, 215, 402, 403, 404, 218, 
   405, 406, 407, 221, 408, 409, 410, 224, 411, 412, 413, 227, 414, 415, 416, 230, 
   417, 418, 419, 234, 420, 421, 422, 238, 423, 424, 425, 243, 426, 427, 428, 246, 
   429, 430, 431, 248, 432, 433, 434, 251, 435, 436, 437, 255, 438, 439, 440, 257, 
   258, 269, 270, 204, 205, 207, 210, 213, 216, 219, 222, 225, 228, 231, 235, 239, 
   244, 247, 249, 252, 256, 200, 201, 181, 188, 189, 198, 79, 80, 91, 92, 62, 
   63, 64, 66, 45, 46, 47, 49, 7, 8, 20, 21, 9, 10, 11, 9, 14, 
   10, 11, 15, 9, 16, 14, 10, 11, 17, 18, 19, 9, 14, 10, 11, 9, 
   16, 14, 10, 11, 9, 16, 14, 10, 11, 17, 9, 16, 14, 10, 11, 17, 
   18, 14, 9, 10, 11, 23, 24, 14, 9, 10, 11, 25, 26, 27, 14, 9, 
   10, 11, 24, 14, 9, 10, 11, 24, 14, 9, 10, 11, 25, 24, 14, 9, 
   10, 11, 25, 26, 45, 52, 46, 47, 49, 53, 45, 54, 52, 46, 47, 49, 
   55, 56, 57, 45, 52, 46, 47, 49, 45, 54, 52, 46, 47, 49, 45, 54, 
   52, 46, 47, 49, 55, 45, 54, 52, 46, 47, 49, 55, 56, 62, 69, 63, 
   64, 66, 70, 62, 71, 69, 63, 64, 66, 72, 73, 74, 62, 69, 63, 64, 
   66, 62, 71, 69, 63, 64, 66, 62, 71, 69, 63, 64, 66, 72, 62, 71, 
   69, 63, 64, 66, 72, 73, 81, 85, 82, 86, 81, 87, 85, 82, 88, 89, 
   90, 81, 85, 82, 81, 87, 85, 82, 81, 87, 85, 82, 88, 81, 87, 85, 
   82, 88, 89, 85, 81, 82, 94, 95, 85, 81, 82, 96, 97, 98, 85, 81, 
   82, 95, 85, 81, 82, 95, 85, 81, 82, 96, 95, 85, 81, 82, 96, 97, 
   100, 104, 101, 105, 100, 106, 104, 101, 107, 108, 109, 100, 104, 101, 100, 106, 
   104, 101, 100, 106, 104, 101, 107, 100, 106, 104, 101, 107, 108, 113, 117, 114, 
   118, 113, 119, 117, 114, 120, 121, 122, 113, 117, 114, 113, 119, 117, 114, 113, 
   119, 117, 114, 120, 113, 119, 117, 114, 120, 121, 117, 113, 114, 126, 127, 117, 
   113, 114, 128, 129, 130, 117, 113, 114, 127, 117, 113, 114, 127, 117, 113, 114, 
   128, 127, 117, 113, 114, 128, 129, 132, 133, 140, 141, 148, 149, 158, 162, 159, 
   163, 158, 164, 162, 159, 165, 166, 167, 158, 162, 159, 158, 164, 162, 159, 158, 
   164, 162, 159, 165, 158, 164, 162, 159, 165, 166, 168, 170, 171, 174, 175, 168, 
   176, 170, 171, 174, 177, 178, 179, 168, 170, 171, 174, 168, 176, 170, 171, 174, 
   168, 176, 170, 171, 174, 177, 168, 176, 170, 171, 174, 177, 178, 259, 263, 260, 
   264, 259, 265, 263, 260, 266, 267, 268, 259, 263, 260, 259, 265, 263, 260, 259, 
   265, 263, 260, 266, 259, 265, 263, 260, 266, 267, 263, 259, 260, 272, 273, 263, 
   259, 260, 274, 275, 276, 263, 259, 260, 273, 263, 259, 260, 273, 263, 259, 260, 
   274, 273, 263, 259, 260, 274, 275, 279, 291, 308, 281, 282, 325, 279, 280, 281, 
   282, 279, 281, 282, 285, 286, 279, 287, 281, 282, 285, 288, 289, 290, 279, 281, 
   282, 285, 279, 287, 281, 282, 285, 279, 287, 281, 282, 285, 288, 279, 287, 281, 
   282, 285, 288, 289, 292, 293, 294, 296, 292, 299, 293, 294, 296, 300, 292, 301, 
   299, 293, 294, 296, 302, 303, 304, 292, 299, 293, 294, 296, 292, 301, 299, 293, 
   294, 296, 292, 301, 299, 293, 294, 296, 302, 292, 301, 299, 293, 294, 296, 302, 
   303, 309, 310, 311, 313, 309, 316, 310, 311, 313, 317, 309, 318, 316, 310, 311, 
   313, 319, 320, 321, 309, 316, 310, 311, 313, 309, 318, 316, 310, 311, 313, 309, 
   318, 316, 310, 311, 313, 319, 309, 318, 316, 310, 311, 313, 319, 320, 279, 291, 
   308, 280, 281, 282, 325, 329, 335, 331, 332, 333, 334, 331, 332, 333, 336, 340, 
   344, 348, 352, 356, 331, 354, 355, 331, 357, 358, 359, 331, 357, 358, 339, 365, 
   366, 367, 339, 365, 366, 369, 362, 370, 371, 372, 369, 362, 370, 369, 362, 370, 
   371, 162, 158, 159, 375, 376, 162, 158, 159, 377, 378, 379, 162, 158, 159, 376, 
   162, 158, 159, 376, 162, 158, 159, 377, 376, 162, 158, 159, 377, 378, 168, 170, 
   171, 174, 381, 382, 168, 170, 171, 174, 383, 384, 385, 382, 168, 170, 171, 174, 
   382, 168, 170, 171, 174, 383, 382, 168, 170, 171, 174, 383, 384, 438, 257, 258, 
   269, 270, 158, 168, 169, 170, 171, 159, 160, 374, 172, 380, 111, 112, 123, 124, 
   327, 328, 360, 48, 58, 60, 59, 50, 51, 65, 75, 77, 76, 67, 68, 102, 
   103, 283, 284, 295, 305, 307, 306, 297, 298, 312, 322, 324, 323, 314, 315, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, "\74\41\55\55", 
"\55\55\76", "\173", "\175", "\174\75", "\136\75", "\44\75", "\52\75", "\176\75", "\75", 
"\53", "\55", "\54", "\73", "\76", "\176", "\74", "\57", "\133", "\135", "\52", 
"\46", "\56", "\50", "\51", "\75\75", "\174\174", "\46\46", "\41\75", "\72", null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "IN_SINGLE_LINE_COMMENT",
   "IN_FORMAL_COMMENT",
   "IN_MULTI_LINE_COMMENT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, 1, -1, 0, 2, 3, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffc03fffffffc03L, 0xfc01ffffffdffL, 
};
static final long[] jjtoSkip = {
   0x190L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x80L, 0x0L, 
};
static final long[] jjtoMore = {
   0x26cL, 0x0L, 
};
protected CharStream input_stream;
private final int[] jjrounds = new int[441];
private final int[] jjstateSet = new int[882];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public ParserTokenManager(CharStream stream){
   input_stream = stream;
}

/** Constructor. */
public ParserTokenManager(CharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(CharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 441; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(CharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 4 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 115)
         {
            jjmatchedKind = 115;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         break;
       case 2:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         if (jjmatchedPos == 0 && jjmatchedKind > 9)
         {
            jjmatchedKind = 9;
         }
         break;
       case 3:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         if (jjmatchedPos == 0 && jjmatchedKind > 9)
         {
            jjmatchedKind = 9;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        MoreLexicalActions();
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      case 5 :
         image.append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                   input_stream.backup(1);
         break;
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 1 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
          image = Parser.SPACE;
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}

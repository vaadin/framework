/*
 * Copyright 2000-2016 Vaadin Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package com.vaadin.tests.components.window;

import com.vaadin.server.Page;
import com.vaadin.server.VaadinRequest;
import com.vaadin.tests.TestForWindowOpen;
import com.vaadin.tests.components.AbstractReindeerTestUI;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.JavaScript;

public class PageOpenTest extends AbstractReindeerTestUI {

    final String url = "http://www.google.com";

    @Override
    protected void setup(VaadinRequest request) {
        final Page page = getPage();

        addComponent(new TestForWindowOpen());

        addComponent(new Button("Page.open _blank always as popup",
                new Button.ClickListener() {
                    @Override
                    public void buttonClick(ClickEvent event) {
                        page.open(url, "_blank", true);
                    }
                }));

        addComponent(new Button("Page.open _blank NOT always as popup",
                new Button.ClickListener() {
                    @Override
                    public void buttonClick(ClickEvent event) {
                        page.open(url, "_blank", false);
                    }
                }));

        addComponent(new Button("Page.open _new always as popup",
                new Button.ClickListener() {
                    @Override
                    public void buttonClick(ClickEvent event) {
                        page.open(url, "_new", true);
                    }
                }));

        addComponent(new Button("Page.open _new NOT always as popup",
                new Button.ClickListener() {
                    @Override
                    public void buttonClick(ClickEvent event) {
                        page.open(url, "_new", false);
                    }
                }));
        addComponent(new Button(
                "Execute Javascript window.open(www.google.com, _blank)",
                new Button.ClickListener() {
                    @Override
                    public void buttonClick(ClickEvent event) {
                        JavaScript.getCurrent().execute(
                                "window.open(\"http://www.google.com\", \"_blank\");");
                    }
                }));
        addComponent(new Button(
                "Execute Javascript window.open(www.google.com, _blank, resizable=yes,menubar=yes,toolbar=yes,directories=yes,location=yes,scrollbars=yes,status=yes)",
                new Button.ClickListener() {
                    @Override
                    public void buttonClick(ClickEvent event) {
                        JavaScript.getCurrent().execute(
                                "window.open(\"http://www.google.com\", \"_blank\", \"resizable=yes,menubar=yes,toolbar=yes,directories=yes,location=yes,scrollbars=yes,status=yes\");");
                    }
                }));

    }

    @Override
    protected String getTestDescription() {
        return "Windows never opened to a new tab";
    }

    @Override
    protected Integer getTicketNumber() {
        return 7842;
    }

}

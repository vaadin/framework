---
title: Vaadin 7 Spring Security
order: 44
layout: page
---

[[vaadin-7-spring-security-base-authentication]]
= Vaadin 7 + Spring Security (base authentication)

Vaadin 7 is easy to integrate with Spring Security. You should configure only
2 files. First - web.xml and second one spring-security.xml (user
credentials and security settings). This is a small example on how to use
base form for authentication.

[[web.xml-configuration]]
web.xml Configuration
^^^^^^^^^^^^^^^^^^^^^

[source,xml]
....
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="[[http://www.w3.org/2001/XMLSchema-instance"xmlns="http://java.sun.com/xml/ns/javaee"xsi:schemaLocation="http://java.sun.com/xml/ns/javaeehttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"id="WebApp_ID|http://www.w3.org/2001/XMLSchema-instance"xmlns="http://java.sun.com/xml/ns/javaee"xsi:schemaLocation="http://java.sun.com/xml/ns/javaeehttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"id="WebApp_ID]]" version="3.0">
  <display-name>Vaadin7SpringSecurity</display-name>
  <context-param> <param-name>contextConfigLocation</param-name> <param-value> /WEB-INF/spring/spring-security.xml </param-value></context-param>
  <listener> <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class></listener>
  <!-- filter declaration for Spring Security -->
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app>
....

[[spring-security.xml]]
spring-security.xml
^^^^^^^^^^^^^^^^^^^

[source,xml]
....
<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<http auto-config='true'>
  <intercept-url pattern="/*" access="ROLE_USER" />
</http>

<authentication-manager>
  <authentication-provider>
    <user-service>
      <user name="user" password="password" authorities="ROLE_USER" />
    </user-service>
  </authentication-provider>
</authentication-manager>

</beans:beans>
....

For more details, how to extend *spring-security.xml* configuration you
can use
http://docs.spring.io/autorepo/docs/spring-security/3.0.x/reference/ns-config.html[Spring
resources].

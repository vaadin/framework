package com.vaadin.tests.components.combobox;

import static org.junit.Assert.assertFalse;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;

import com.vaadin.testbench.elements.ComboBoxElement;
import com.vaadin.testbench.elements.MenuBarElement;
import com.vaadin.tests.tb3.MultiBrowserTest;
import com.vaadin.ui.Notification.Type;

/**
 * Test that checks whether Combobox popup is closed on click to autoopen
 * menubar and its item.
 *
 * @author Vaadin Ltd
 */
public class ComboboxMenuBarAutoopenTest extends MultiBrowserTest {

    @Test
    public void closeComboboxPopupOnClickToMenuBar() {
        openTestURL();

        openPopup();
        MenuBarElement menuBar = selectMenuBar();
        menuBar.click();
        assertFalse("Combobox popup items are visible",
                isElementPresent(By.className("gwt-MenuItem")));
    }

    @Test
    public void closeComboboxPopupOnClickToMenuBarItem() {
        openTestURL();

        openPopup();

        // hover over menubar to open
        WebElement menuBarItem = findElement(
                By.className("v-menubar-menuitem-caption"));
        moveToElement(menuBarItem);

        // click submenu item
        findElements(By.className("v-menubar-menuitem-caption")).get(1).click();
        assertElementPresent(By.className(
                "v-Notification-" + Type.HUMANIZED_MESSAGE.getStyle()));

        assertFalse("Combobox popup items are visible",
                isElementPresent(By.className("gwt-MenuItem")));
    }

    private void openPopup() {
        ComboBoxElement combobox = $(ComboBoxElement.class).first();
        combobox.openPopup();

        moveToElement(findElement(By.className("gwt-MenuItem")));
    }

    private MenuBarElement selectMenuBar() {
        MenuBarElement menuBar = $(MenuBarElement.class).first();
        menuBar.focus();

        moveToElement(menuBar);

        return menuBar;
    }

    private void moveToElement(WebElement target) {
        Actions actions = new Actions(driver);
        actions.moveToElement(target).build().perform();
    }
}
